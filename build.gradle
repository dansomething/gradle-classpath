plugins {
  id 'java'
  id 'application'
  id 'checkstyle'
  id 'com.diffplug.spotless' version '6.3.0'
  id 'com.github.gmazzo.buildconfig' version '3.0.3'
  id 'net.researchgate.release' version '2.8.1'
}

ext {
  javaVersion = '1.8'
  junitVersion = '5.8.2'
  picocliVersion = '4.6.3'
  slf4jVersion = '1.7.36'
  toolingApiVersion = gradle.gradleVersion
}

repositories {
  maven {
    url 'https://repo.gradle.org/gradle/libs-releases-local'
  }
  mavenCentral()
}

compileJava {
  sourceCompatibility = javaVersion
  targetCompatibility = javaVersion
}

dependencies {
  implementation "org.gradle:gradle-tooling-api:${toolingApiVersion}"
  implementation "info.picocli:picocli:${picocliVersion}"

  annotationProcessor "info.picocli:picocli-codegen:${picocliVersion}"

  runtimeOnly "org.slf4j:slf4j-simple:${slf4jVersion}"

  testImplementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
  testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"
}

application {
  mainClass = 'com.dansomething.gradle.classpath.App'
}

test {
  useJUnitPlatform()
}

// https://github.com/gmazzo/gradle-buildconfig-plugin
buildConfig {
  packageName('com.dansomething.gradle.classpath')
  buildConfigField('String', "APP_VERSION", "\"${project.version}\"")
}

// https://docs.gradle.org/current/userguide/checkstyle_plugin.html
checkstyle {
  configFile file("${rootDir}/checkstyle.xml")
  maxWarnings 0
  toolVersion '8.42'
}
// Be sure to ingore generated sources
checkstyleMain.source = 'src/main/java'

// https://github.com/researchgate/gradle-release
release {
  git {
    requireBranch = 'main'
  }
}

// https://github.com/diffplug/spotless/tree/main/plugin-gradle
spotless {
  format 'misc', {
    target '*.gradle', '*.md', '.gitignore', '*.xml'

    trimTrailingWhitespace()
    indentWithSpaces(2)
    endWithNewline()
  }
  java {
    targetExclude 'build/generated/**/*.*'
    googleJavaFormat()
  }
}

distTar {
  compression = Compression.GZIP
  archiveExtension = 'tar.gz'
}
